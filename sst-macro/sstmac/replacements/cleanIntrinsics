#! /usr/bin/env python

text_arr = open("fixIntrinsics.h").read().splitlines()

import sys


new_text_arr = []
last_instance = {}
idx = 0
for line in text_arr:
  if "define" in line:
    name = line.split()[1].split("(")[0].strip()
    last_instance[name] = idx
  idx += 1

idx = 0
for line in text_arr:
  if "define" in line:
    name = line.split()[1].split("(")[0].strip()
    if idx == last_instance[name]:
      #only take the last instance
      new_text_arr.append(line)
      print "keeping", name
    else:
      print "throwing out duplicate", name
  else:
    new_text_arr.append(line)
  idx += 1

newText = "\n".join(new_text_arr)

sanity = {}
for line in newText.splitlines():
  if "define" in line:
    name = line.split()[1].split("(")[0].strip()
    if sanity.has_key(name):
      sys.exit("still have duplicate %s" % name)
    else: 
      sanity[name] = 1

open("fixIntrinsics.h","w").write(newText)


